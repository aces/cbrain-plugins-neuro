
<%
#
# This partial renders the pipeline builder box for a BidsApp.
#
# Required locals: :form and :params
#
%>

<fieldset><legend>Pipeline Steps</legend>

  <% current_pipeline = params[:_cb_pipeline] || {} %>

  <% if current_pipeline.present? %>
    These are your currently selected analysis steps in your pipeline:<p>
  <% end %>

  <% num_participants = @task.selected_participants.size %>
  <% num_sessions     = @task.selected_sessions.size %>
  <table class="simple">
    <tr>
      <th>Step</th>
      <th>Analysis Level</th>
      <th>Save output?</th>
      <th>Pipeline summary</th>
      <th>Edit pipeline</th>
    </tr>
    <% if current_pipeline.blank? %>
      <tr>
        <td colspan="5">
          <span class="warning">(Your pipeline list is currently empty. Add analyis levels from the list below)</span>
        </td>
      </tr>
    <% end %>
    <% current_pipeline.keys.sort { |a,b| a.to_i <=> b.to_i }.each_with_index do |strnum,step| %>
    <% struct = current_pipeline[strnum] %>
    <% al     = struct[:name]            %>
    <tr>
      <td>
        <%= form.params_hidden_field "_cb_pipeline[#{strnum}][name]" %>
        Step #<%= step+1 %> :
      </td>
      <td>
        <strong>&quot;<%= al %>&quot;</strong>
      </td>
      <td>
        <%= form.params_check_box "_cb_pipeline[#{strnum}][save]" %>
        as:
        <%= form.params_text_field "_cb_pipeline[#{strnum}][savename]", :size  => 20 %>
      </td>
      <td>
        <% if al =~ /participant/i %>
          (Will launch: <%= num_participants %> participant-level subtasks)
        <% elsif al =~ /session/i %>
          (Will launch: <%= num_sessions == 0 ? 1 : num_sessions %> session-level subtasks)
        <% elsif al =~ /group/i %>
          (Will launch: 1 group-level subtask)
        <% else %>
          (Will launch: 1 special subtask)
        <% end %>
      </td>
      <td>
        <%= form.params_label "_cb_pipeaction_remove_#{strnum}" do %>
        (Remove: <%= form.params_check_box "_cb_pipeaction_remove_#{strnum}" %>)
        <% end %>
      </td>
    </tr>
  <% end %>
  </table>

  <% if current_pipeline.present? %>
    <p class="wide_field_explanation">
    This third column shows that you can save intermediate outputs; if no name is provided,
    the system will create a unique name for you using the pattern system described in the box below (this is recommended).
    You can also use the pattern <i>keywords</i> here too.
  <% end %>

  <p>

  Available analysis levels:
  <small>(When selected, these will be appended to list above)</small>

  <ul>
    <% @task.analysis_levels.each_with_index do |al,idx| %>
      <li>
        <%= form.params_label "_cb_pipeaction_add_#{idx}" do %>
        <strong>
          <%= al %>
        </strong> : (Add: <%= form.params_check_box "_cb_pipeaction_add_#{idx}" %>)
        <% end %>
      </li>
    <% end %>
  </ul>

  <%= button_tag 'Add/Remove Analysis Levels', :name => 'refresh', :value => "refresh", :class => 'button', :type => 'submit' %>

  <% al_description = @task.analysis_levels_input_descriptor['description'].presence %>
  <%= overlay_description("(Descriptions):\n" + al_description) if al_description %>

  <%=
    #############################################################
    # Global Output Renaming Panel
    #############################################################
    render :partial => task_partial('task_params_output_renaming', 'CbrainTask::BidsAppHandler'),
           :locals  => { :form => form, :params => params }
  %>

</fieldset>
