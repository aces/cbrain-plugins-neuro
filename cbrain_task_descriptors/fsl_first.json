{
    "command-line": "mkdir -p [OUTPUT_DIR]; run_first_all [METHOD] [BRAIN_EXTRACTED] [SPECIFIED_STRUCTURE] [AFFINE] [THREE_STAGE] [VERBOSE] [INPUT_FILE] -o [OUTPUT_DIR]/[PREFIX]", 
    "description": "FIRST is a model-based segmentation and registration tool, based on a Bayesian model of shape and appearance for subcortical structures.", 
    "inputs": [
        {
            "command-line-flag": "-m", 
            "description": "Method must be one of 'auto' (default), 'fast', 'none', or it can be a numerical threshold value. This specifies the boundary correction method. Auto chooses different options for different structures using the settings that were found to be empirically optimal for each structure. Other options use: fast (using FAST-based, mixture-model, tissue-type classification) or threshold (thresholds a simple single-Gaussian intensity model).", 
            "id": "method", 
            "list": false, 
            "name": "Method", 
            "optional": true, 
            "type": "String", 
            "value-key": "[METHOD]"
        }, 
        {
            "command-line-flag": "-i", 
            "description": "Input image file (e.g. img.nii.gz).", 
            "id": "input_file", 
            "list": false, 
            "name": "Input file", 
            "optional": false, 
            "type": "File", 
            "value-key": "[INPUT_FILE]"
        }, 
        {
            "command-line-flag": "-b", 
            "description": "Whether the input is already brain extracted.", 
            "id": "brain_extracted", 
            "list": false, 
            "name": "Brain extracted", 
            "optional": true, 
            "type": "Flag", 
            "value-key": "[BRAIN_EXTRACTED]"
        }, 
        {
            "command-line-flag": "-s", 
            "description": "Run only on one specified structure (e.g. L_Hipp) or a comma-separated list (no spaces). Choose from: 'L_Hipp', 'R_Hipp', 'L_Accu', 'R_Accu', 'L_Amyg', 'R_Amyg', 'L_Caud', 'R_Caud', 'L_Pall', 'R_Pall', 'L_Puta', 'R_Puta', 'L_Thal', 'R_Thal', 'BrStem'.", 
            "id": "specified_structure", 
            "list": false, 
            "name": "Specify structure", 
            "optional": true, 
            "type": "String", 
            "value-key": "[SPECIFIED_STRUCTURE]"
        }, 
        {
            "command-line-flag": "-a", 
            "description": "Use affine matrix (i.e. do not re-run registration).", 
            "id": "affine", 
            "list": false, 
            "name": "Use Affine Matrix", 
            "optional": true, 
            "type": "File", 
            "value-key": "[AFFINE]"
        }, 
        {
            "command-line-flag": "-3", 
            "description": "Use 3-stage affine registration. Only currently implemented for the hippocampus.", 
            "id": "three_stage", 
            "list": false, 
            "name": "Three stage registration", 
            "optional": true, 
            "type": "Flag", 
            "value-key": "[THREE_STAGE]"
        }, 
        {
            "command-line-flag": "-v", 
            "description": "Verbose output.", 
            "id": "verbose", 
            "list": false, 
            "name": "Verbose", 
            "optional": true, 
            "type": "Flag", 
            "value-key": "[VERBOSE]"
        }, 
        {
            "default-value": "output", 
            "description": "Prefix for each files in the directory output.", 
            "id": "prefix", 
            "list": false, 
            "name": "Prefix", 
            "optional": false, 
            "type": "String", 
            "value-key": "[PREFIX]"
        }
    ], 
    "name": "fsl_first", 
    "output-files": [
        {
            "description": "Output directory of First", 
            "id": "outputs", 
            "list": false, 
            "name": "First Outputs", 
            "path-template": "[INPUT_FILE]", 
            "path-template-stripped-extensions": [
                ".nii", 
                ".nii.gz"
            ], 
            "value-key": "[OUTPUT_DIR]"
        }, 
        {
            "description": "Std sub output", 
            "id": "std_sub_outputs", 
            "list": true, 
            "name": "Registered outputs", 
            "path-template": "[INPUT_FILE]_to_std_sub*", 
            "path-template-stripped-extensions": [
                ".nii", 
                ".nii.gz"
            ]
        }
    ], 
    "schema-version": "0.5", 
    "tool-version": "5.0.0"
}